{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T16:36:29.441Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T16:36:29.832Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T16:36:41.572Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T16:36:41.750Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T16:37:10.495Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T16:37:10.676Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T16:38:26.751Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T16:39:06.761Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T16:39:06.945Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T16:40:29.854Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T16:40:30.229Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T16:45:26.610Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T16:45:26.918Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T16:46:04.737Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T16:46:04.930Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T16:51:49.033Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T16:51:49.354Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T16:54:08.765Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T16:54:09.100Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T16:55:13.387Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T16:55:13.754Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T16:57:37.021Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T16:57:37.321Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T17:07:09.079Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T17:07:09.359Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T17:08:23.588Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T17:08:23.871Z'
}
{
  metadata: AppError: unauthorized
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:166:27
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at Route.dispatch (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:112:3)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:281:22
      at Function.process_params (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:335:12)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:275:10)
      at Function.handle (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:174:3)
      at router (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:47:12)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at trim_prefix (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:317:13) {
    status: 'unauthorized'
  },
  level: 'error',
  message: 'unauthorized',
  timestamp: '2020-09-02T17:09:27.397Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T17:09:55.206Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T17:09:55.551Z'
}
{
  metadata: AppError: unauthorized
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:166:27
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at Route.dispatch (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:112:3)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:281:22
      at Function.process_params (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:335:12)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:275:10)
      at Function.handle (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:174:3)
      at router (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:47:12)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at trim_prefix (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:317:13) {
    status: 'unauthorized'
  },
  level: 'error',
  message: 'unauthorized',
  timestamp: '2020-09-02T17:10:03.463Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T17:11:32.531Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T17:11:32.834Z'
}
{
  metadata: AppError: unauthorized
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:167:27
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at Route.dispatch (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:112:3)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:281:22
      at Function.process_params (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:335:12)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:275:10)
      at Function.handle (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:174:3)
      at router (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:47:12)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at trim_prefix (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:317:13) {
    status: 'unauthorized'
  },
  level: 'error',
  message: 'unauthorized',
  timestamp: '2020-09-02T17:11:39.762Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T17:12:07.405Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T17:12:07.591Z'
}
{
  metadata: AppError: unauthorized
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:167:27
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at Route.dispatch (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:112:3)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:281:22
      at Function.process_params (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:335:12)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:275:10)
      at Function.handle (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:174:3)
      at router (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:47:12)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at trim_prefix (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:317:13) {
    status: 'unauthorized'
  },
  level: 'error',
  message: 'unauthorized',
  timestamp: '2020-09-02T17:12:10.262Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T17:16:41.456Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T17:16:41.761Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T17:17:37.849Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T17:17:38.060Z'
}
{
  metadata: AppError: unauthorized
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:167:27
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at Route.dispatch (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:112:3)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:281:22
      at Function.process_params (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:335:12)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:275:10)
      at Function.handle (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:174:3)
      at router (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:47:12)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at trim_prefix (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:317:13) {
    status: 'unauthorized'
  },
  level: 'error',
  message: 'unauthorized',
  timestamp: '2020-09-02T17:17:40.044Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T17:21:11.704Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T17:21:12.026Z'
}
{
  metadata: AppError: unauthorized
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:167:27
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at Route.dispatch (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:112:3)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:281:22
      at Function.process_params (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:335:12)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:275:10)
      at Function.handle (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:174:3)
      at router (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:47:12)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at trim_prefix (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:317:13) {
    status: 'unauthorized'
  },
  level: 'error',
  message: 'unauthorized',
  timestamp: '2020-09-02T17:21:14.242Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T17:43:53.493Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T17:43:53.811Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T17:44:50.290Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T17:44:50.488Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T17:50:20.389Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T17:50:20.680Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T18:03:36.092Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T18:03:36.465Z'
}
{
  metadata: AppError: unauthorized
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:167:27
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at Route.dispatch (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:112:3)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:281:22
      at Function.process_params (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:335:12)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:275:10)
      at Function.handle (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:174:3)
      at router (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:47:12)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at trim_prefix (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:317:13) {
    status: 'unauthorized'
  },
  level: 'error',
  message: 'unauthorized',
  timestamp: '2020-09-02T18:03:38.742Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T18:52:54.747Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T18:52:55.066Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:03:03.555Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:03:03.878Z'
}
{
  metadata: AppError: unauthorized
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:165:27
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at Route.dispatch (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:112:3)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:281:22
      at Function.process_params (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:335:12)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:275:10)
      at Function.handle (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:174:3)
      at router (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:47:12)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at trim_prefix (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:317:13) {
    status: 'unauthorized'
  },
  level: 'error',
  message: 'unauthorized',
  timestamp: '2020-09-02T21:03:52.877Z'
}
{
  metadata: AppError: unauthorized
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:165:27
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at Route.dispatch (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:112:3)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:281:22
      at Function.process_params (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:335:12)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:275:10)
      at Function.handle (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:174:3)
      at router (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:47:12)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at trim_prefix (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:317:13) {
    status: 'unauthorized'
  },
  level: 'error',
  message: 'unauthorized',
  timestamp: '2020-09-02T21:04:13.123Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:04:36.839Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:04:37.103Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:04:49.796Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:04:49.978Z'
}
{
  metadata: AppError: unauthorized
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:165:27
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at Route.dispatch (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:112:3)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:281:22
      at Function.process_params (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:335:12)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:275:10)
      at Function.handle (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:174:3)
      at router (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:47:12)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at trim_prefix (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:317:13) {
    status: 'unauthorized'
  },
  level: 'error',
  message: 'unauthorized',
  timestamp: '2020-09-02T21:05:41.501Z'
}
{
  metadata: AppError: unauthorized
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:165:27
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at Route.dispatch (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:112:3)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:281:22
      at Function.process_params (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:335:12)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:275:10)
      at Function.handle (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:174:3)
      at router (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:47:12)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at trim_prefix (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:317:13) {
    status: 'unauthorized'
  },
  level: 'error',
  message: 'unauthorized',
  timestamp: '2020-09-02T21:05:41.506Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:05:48.849Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:05:49.188Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:05:53.746Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:05:53.932Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:06:00.572Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:06:00.762Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:06:06.712Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:06:06.931Z'
}
{
  metadata: AppError: unauthorized
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:165:27
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at Route.dispatch (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:112:3)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:281:22
      at Function.process_params (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:335:12)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:275:10)
      at Function.handle (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:174:3)
      at router (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:47:12)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at trim_prefix (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:317:13) {
    status: 'unauthorized'
  },
  level: 'error',
  message: 'unauthorized',
  timestamp: '2020-09-02T21:06:10.503Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:06:49.803Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:06:50.126Z'
}
{
  metadata: AppError: unauthorized
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:165:27
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at Route.dispatch (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:112:3)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:281:22
      at Function.process_params (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:335:12)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:275:10)
      at Function.handle (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:174:3)
      at router (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:47:12)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at trim_prefix (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\index.js:317:13) {
    status: 'unauthorized'
  },
  level: 'error',
  message: 'unauthorized',
  timestamp: '2020-09-02T21:06:52.490Z'
}
{
  metadata: Error: User validation failed: passwordConfirm: Path `passwordConfirm` is required.
      at ValidationError.inspect (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\error\validation.js:47:26)
      at formatValue (internal/util/inspect.js:563:31)
      at formatProperty (internal/util/inspect.js:1406:11)
      at formatRaw (internal/util/inspect.js:785:9)
      at formatValue (internal/util/inspect.js:591:10)
      at inspect (internal/util/inspect.js:221:10)
      at Format.transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\logform\pretty-print.js:27:19)
      at Format.transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\logform\combine.js:20:24)
      at DerivedLogger._transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\logger.js:305:29)
      at DerivedLogger.Transform._read (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_transform.js:177:10)
      at DerivedLogger.Transform._write (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_transform.js:164:83)
      at doWrite (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:409:139)
      at writeOrBuffer (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:398:5)
      at DerivedLogger.Writable.write (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:307:11)
      at DerivedLogger.log (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\logger.js:244:14)
      at DerivedLogger.<computed> [as error] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\create-logger.js:95:19) {
    errors: {
      passwordConfirm: ValidatorError: Path `passwordConfirm` is required.
          at validate (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1217:13)
          at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1200:7
          at Array.forEach (<anonymous>)
          at SchemaString.SchemaType.doValidate (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1145:14)
          at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\document.js:2408:18
          at processTicksAndRejections (internal/process/task_queues.js:75:11) {
        properties: {
          validator: [Function],
          message: 'Path `passwordConfirm` is required.',
          type: 'required',
          path: 'passwordConfirm',
          value: undefined
        },
        kind: 'required',
        path: 'passwordConfirm',
        value: undefined,
        reason: undefined,
        [Symbol(mongoose:validatorError)]: true
      }
    },
    _message: 'User validation failed'
  },
  level: 'error',
  message: 'User validation failed: passwordConfirm: Path `passwordConfirm` is required.',
  timestamp: '2020-09-02T21:07:08.776Z'
}
{
  metadata: AppError: email
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:113:19)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    status: 'email'
  },
  level: 'error',
  message: 'email',
  timestamp: '2020-09-02T21:07:31.636Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:07:44.879Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:07:45.071Z'
}
{
  metadata: AppError: email
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:113:19)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    status: 'email'
  },
  level: 'error',
  message: 'email',
  timestamp: '2020-09-02T21:07:54.855Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:08:24.674Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:08:25.257Z'
}
{
  metadata: AppError: email
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:113:19)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    status: 'email'
  },
  level: 'error',
  message: 'email',
  timestamp: '2020-09-02T21:08:27.096Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:21:09.043Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:21:09.455Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:22:42.346Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:22:42.621Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:23:59.283Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:23:59.541Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:24:29.443Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:24:29.624Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:44:47.595Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:44:47.896Z'
}
{
  metadata: Error: User validation failed: passwordConfirm: Path `passwordConfirm` is required.
      at ValidationError.inspect (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\error\validation.js:47:26)
      at formatValue (internal/util/inspect.js:563:31)
      at formatProperty (internal/util/inspect.js:1406:11)
      at formatRaw (internal/util/inspect.js:785:9)
      at formatValue (internal/util/inspect.js:591:10)
      at inspect (internal/util/inspect.js:221:10)
      at Format.transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\logform\pretty-print.js:27:19)
      at Format.transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\logform\combine.js:20:24)
      at DerivedLogger._transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\logger.js:305:29)
      at DerivedLogger.Transform._read (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_transform.js:177:10)
      at DerivedLogger.Transform._write (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_transform.js:164:83)
      at doWrite (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:409:139)
      at writeOrBuffer (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:398:5)
      at DerivedLogger.Writable.write (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:307:11)
      at DerivedLogger.log (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\logger.js:244:14)
      at DerivedLogger.<computed> [as error] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\create-logger.js:95:19) {
    errors: {
      passwordConfirm: ValidatorError: Path `passwordConfirm` is required.
          at validate (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1217:13)
          at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1200:7
          at Array.forEach (<anonymous>)
          at SchemaString.SchemaType.doValidate (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1145:14)
          at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\document.js:2408:18
          at processTicksAndRejections (internal/process/task_queues.js:75:11) {
        properties: {
          validator: [Function],
          message: 'Path `passwordConfirm` is required.',
          type: 'required',
          path: 'passwordConfirm',
          value: undefined
        },
        kind: 'required',
        path: 'passwordConfirm',
        value: undefined,
        reason: undefined,
        [Symbol(mongoose:validatorError)]: true
      }
    },
    _message: 'User validation failed'
  },
  level: 'error',
  message: 'User validation failed: passwordConfirm: Path `passwordConfirm` is required.',
  timestamp: '2020-09-02T21:45:21.140Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:48:44.967Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:48:45.311Z'
}
{
  metadata: Error: User validation failed: passwordConfirm: Path `passwordConfirm` is required.
      at ValidationError.inspect (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\error\validation.js:47:26)
      at formatValue (internal/util/inspect.js:563:31)
      at formatProperty (internal/util/inspect.js:1406:11)
      at formatRaw (internal/util/inspect.js:785:9)
      at formatValue (internal/util/inspect.js:591:10)
      at inspect (internal/util/inspect.js:221:10)
      at Format.transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\logform\pretty-print.js:27:19)
      at Format.transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\logform\combine.js:20:24)
      at DerivedLogger._transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\logger.js:305:29)
      at DerivedLogger.Transform._read (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_transform.js:177:10)
      at DerivedLogger.Transform._write (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_transform.js:164:83)
      at doWrite (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:409:139)
      at writeOrBuffer (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:398:5)
      at DerivedLogger.Writable.write (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:307:11)
      at DerivedLogger.log (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\logger.js:244:14)
      at DerivedLogger.<computed> [as error] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\create-logger.js:95:19) {
    errors: {
      passwordConfirm: ValidatorError: Path `passwordConfirm` is required.
          at validate (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1217:13)
          at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1200:7
          at Array.forEach (<anonymous>)
          at SchemaString.SchemaType.doValidate (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1145:14)
          at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\document.js:2408:18
          at processTicksAndRejections (internal/process/task_queues.js:75:11) {
        properties: {
          validator: [Function],
          message: 'Path `passwordConfirm` is required.',
          type: 'required',
          path: 'passwordConfirm',
          value: undefined
        },
        kind: 'required',
        path: 'passwordConfirm',
        value: undefined,
        reason: undefined,
        [Symbol(mongoose:validatorError)]: true
      }
    },
    _message: 'User validation failed'
  },
  level: 'error',
  message: 'User validation failed: passwordConfirm: Path `passwordConfirm` is required.',
  timestamp: '2020-09-02T21:48:47.737Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:49:52.498Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:49:52.830Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:50:21.431Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:50:21.631Z'
}
{
  metadata: Error: User validation failed: passwordConfirm: Path `passwordConfirm` is required.
      at ValidationError.inspect (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\error\validation.js:47:26)
      at formatValue (internal/util/inspect.js:563:31)
      at formatProperty (internal/util/inspect.js:1406:11)
      at formatRaw (internal/util/inspect.js:785:9)
      at formatValue (internal/util/inspect.js:591:10)
      at inspect (internal/util/inspect.js:221:10)
      at Format.transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\logform\pretty-print.js:27:19)
      at Format.transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\logform\combine.js:20:24)
      at DerivedLogger._transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\logger.js:305:29)
      at DerivedLogger.Transform._read (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_transform.js:177:10)
      at DerivedLogger.Transform._write (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_transform.js:164:83)
      at doWrite (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:409:139)
      at writeOrBuffer (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:398:5)
      at DerivedLogger.Writable.write (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:307:11)
      at DerivedLogger.log (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\logger.js:244:14)
      at DerivedLogger.<computed> [as error] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\create-logger.js:95:19) {
    errors: {
      passwordConfirm: ValidatorError: Path `passwordConfirm` is required.
          at validate (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1217:13)
          at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1200:7
          at Array.forEach (<anonymous>)
          at SchemaString.SchemaType.doValidate (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1145:14)
          at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\document.js:2408:18
          at processTicksAndRejections (internal/process/task_queues.js:75:11) {
        properties: {
          validator: [Function],
          message: 'Path `passwordConfirm` is required.',
          type: 'required',
          path: 'passwordConfirm',
          value: undefined
        },
        kind: 'required',
        path: 'passwordConfirm',
        value: undefined,
        reason: undefined,
        [Symbol(mongoose:validatorError)]: true
      }
    },
    _message: 'User validation failed'
  },
  level: 'error',
  message: 'User validation failed: passwordConfirm: Path `passwordConfirm` is required.',
  timestamp: '2020-09-02T21:50:35.740Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:52:10.518Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:52:10.864Z'
}
{
  metadata: Error: User validation failed: passwordConfirm: Path `passwordConfirm` is required.
      at ValidationError.inspect (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\error\validation.js:47:26)
      at formatValue (internal/util/inspect.js:563:31)
      at formatProperty (internal/util/inspect.js:1406:11)
      at formatRaw (internal/util/inspect.js:785:9)
      at formatValue (internal/util/inspect.js:591:10)
      at inspect (internal/util/inspect.js:221:10)
      at Format.transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\logform\pretty-print.js:27:19)
      at Format.transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\logform\combine.js:20:24)
      at DerivedLogger._transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\logger.js:305:29)
      at DerivedLogger.Transform._read (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_transform.js:177:10)
      at DerivedLogger.Transform._write (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_transform.js:164:83)
      at doWrite (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:409:139)
      at writeOrBuffer (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:398:5)
      at DerivedLogger.Writable.write (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:307:11)
      at DerivedLogger.log (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\logger.js:244:14)
      at DerivedLogger.<computed> [as error] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\create-logger.js:95:19) {
    errors: {
      passwordConfirm: ValidatorError: Path `passwordConfirm` is required.
          at validate (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1217:13)
          at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1200:7
          at Array.forEach (<anonymous>)
          at SchemaString.SchemaType.doValidate (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1145:14)
          at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\document.js:2408:18
          at processTicksAndRejections (internal/process/task_queues.js:75:11) {
        properties: {
          validator: [Function],
          message: 'Path `passwordConfirm` is required.',
          type: 'required',
          path: 'passwordConfirm',
          value: undefined
        },
        kind: 'required',
        path: 'passwordConfirm',
        value: undefined,
        reason: undefined,
        [Symbol(mongoose:validatorError)]: true
      }
    },
    _message: 'User validation failed'
  },
  level: 'error',
  message: 'User validation failed: passwordConfirm: Path `passwordConfirm` is required.',
  timestamp: '2020-09-02T21:52:16.822Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:52:44.234Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:52:44.422Z'
}
{
  metadata: Error: User validation failed: passwordConfirm: Path `passwordConfirm` is required.
      at ValidationError.inspect (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\error\validation.js:47:26)
      at formatValue (internal/util/inspect.js:563:31)
      at formatProperty (internal/util/inspect.js:1406:11)
      at formatRaw (internal/util/inspect.js:785:9)
      at formatValue (internal/util/inspect.js:591:10)
      at inspect (internal/util/inspect.js:221:10)
      at Format.transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\logform\pretty-print.js:27:19)
      at Format.transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\logform\combine.js:20:24)
      at DerivedLogger._transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\logger.js:305:29)
      at DerivedLogger.Transform._read (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_transform.js:177:10)
      at DerivedLogger.Transform._write (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_transform.js:164:83)
      at doWrite (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:409:139)
      at writeOrBuffer (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:398:5)
      at DerivedLogger.Writable.write (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:307:11)
      at DerivedLogger.log (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\logger.js:244:14)
      at DerivedLogger.<computed> [as error] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\create-logger.js:95:19) {
    errors: {
      passwordConfirm: ValidatorError: Path `passwordConfirm` is required.
          at validate (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1217:13)
          at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1200:7
          at Array.forEach (<anonymous>)
          at SchemaString.SchemaType.doValidate (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1145:14)
          at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\document.js:2408:18
          at processTicksAndRejections (internal/process/task_queues.js:75:11) {
        properties: {
          validator: [Function],
          message: 'Path `passwordConfirm` is required.',
          type: 'required',
          path: 'passwordConfirm',
          value: undefined
        },
        kind: 'required',
        path: 'passwordConfirm',
        value: undefined,
        reason: undefined,
        [Symbol(mongoose:validatorError)]: true
      }
    },
    _message: 'User validation failed'
  },
  level: 'error',
  message: 'User validation failed: passwordConfirm: Path `passwordConfirm` is required.',
  timestamp: '2020-09-02T21:52:53.441Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:53:19.471Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:53:19.786Z'
}
{
  metadata: Error: User validation failed: passwordConfirm: Path `passwordConfirm` is required.
      at ValidationError.inspect (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\error\validation.js:47:26)
      at formatValue (internal/util/inspect.js:563:31)
      at formatProperty (internal/util/inspect.js:1406:11)
      at formatRaw (internal/util/inspect.js:785:9)
      at formatValue (internal/util/inspect.js:591:10)
      at inspect (internal/util/inspect.js:221:10)
      at Format.transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\logform\pretty-print.js:27:19)
      at Format.transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\logform\combine.js:20:24)
      at DerivedLogger._transform (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\logger.js:305:29)
      at DerivedLogger.Transform._read (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_transform.js:177:10)
      at DerivedLogger.Transform._write (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_transform.js:164:83)
      at doWrite (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:409:139)
      at writeOrBuffer (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:398:5)
      at DerivedLogger.Writable.write (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\node_modules\readable-stream\lib\_stream_writable.js:307:11)
      at DerivedLogger.log (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\logger.js:244:14)
      at DerivedLogger.<computed> [as error] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\winston\lib\winston\create-logger.js:95:19) {
    errors: {
      passwordConfirm: ValidatorError: Path `passwordConfirm` is required.
          at validate (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1217:13)
          at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1200:7
          at Array.forEach (<anonymous>)
          at SchemaString.SchemaType.doValidate (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\schematype.js:1145:14)
          at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongoose\lib\document.js:2408:18
          at processTicksAndRejections (internal/process/task_queues.js:75:11) {
        properties: {
          validator: [Function],
          message: 'Path `passwordConfirm` is required.',
          type: 'required',
          path: 'passwordConfirm',
          value: undefined
        },
        kind: 'required',
        path: 'passwordConfirm',
        value: undefined,
        reason: undefined,
        [Symbol(mongoose:validatorError)]: true
      }
    },
    _message: 'User validation failed'
  },
  level: 'error',
  message: 'User validation failed: passwordConfirm: Path `passwordConfirm` is required.',
  timestamp: '2020-09-02T21:53:23.730Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:54:21.528Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:54:21.862Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:56:41.984Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:56:42.318Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt.users index: email_1 dup key: { email: "new3457@gmail.com" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at handler (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\topologies\replset.js:1204:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { email: 1 },
    keyValue: { email: 'new3457@gmail.com' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt.users index: email_1 dup key: { email: "new3457@gmail.com" }',
  timestamp: '2020-09-02T21:56:45.193Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt.users index: email_1 dup key: { email: "new3457@gmail.com" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at handler (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\topologies\replset.js:1204:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { email: 1 },
    keyValue: { email: 'new3457@gmail.com' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt.users index: email_1 dup key: { email: "new3457@gmail.com" }',
  timestamp: '2020-09-02T21:58:32.003Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:58:47.469Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:58:47.768Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt.users index: email_1 dup key: { email: "new3457@gmail.com" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at handler (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\topologies\replset.js:1204:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { email: 1 },
    keyValue: { email: 'new3457@gmail.com' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt.users index: email_1 dup key: { email: "new3457@gmail.com" }',
  timestamp: '2020-09-02T21:58:49.928Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T21:59:24.427Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T21:59:24.742Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt.users index: email_1 dup key: { email: "new3457@gmail.com" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at handler (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\topologies\replset.js:1204:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { email: 1 },
    keyValue: { email: 'new3457@gmail.com' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt.users index: email_1 dup key: { email: "new3457@gmail.com" }',
  timestamp: '2020-09-02T21:59:26.444Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T22:00:35.389Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T22:00:35.741Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt.users index: email_1 dup key: { email: "new3457@gmail.com" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at handler (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\topologies\replset.js:1204:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { email: 1 },
    keyValue: { email: 'new3457@gmail.com' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt.users index: email_1 dup key: { email: "new3457@gmail.com" }',
  timestamp: '2020-09-02T22:00:37.307Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T22:01:03.620Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T22:01:03.806Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt.users index: email_1 dup key: { email: "new3457@gmail.com" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at handler (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\topologies\replset.js:1204:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { email: 1 },
    keyValue: { email: 'new3457@gmail.com' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt.users index: email_1 dup key: { email: "new3457@gmail.com" }',
  timestamp: '2020-09-02T22:01:05.387Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T22:03:22.383Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T22:03:22.705Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T22:06:50.693Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T22:06:51.019Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at handler (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\topologies\replset.js:1204:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { username: 1 },
    keyValue: { username: 'test' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }',
  timestamp: '2020-09-02T22:06:52.469Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T22:09:49.903Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T22:09:50.287Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at handler (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\topologies\replset.js:1204:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { username: 1 },
    keyValue: { username: 'test' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }',
  timestamp: '2020-09-02T22:09:52.056Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T22:10:10.326Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T22:10:10.526Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at handler (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\topologies\replset.js:1204:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { username: 1 },
    keyValue: { username: 'test' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }',
  timestamp: '2020-09-02T22:10:12.495Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T22:13:11.475Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T22:13:11.805Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at handler (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\topologies\replset.js:1204:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { username: 1 },
    keyValue: { username: 'test' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }',
  timestamp: '2020-09-02T22:13:29.434Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T22:14:45.868Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T22:14:46.204Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at handler (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\topologies\replset.js:1204:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { username: 1 },
    keyValue: { username: 'test' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }',
  timestamp: '2020-09-02T22:14:47.811Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at handler (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\topologies\replset.js:1204:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { username: 1 },
    keyValue: { username: 'test' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }',
  timestamp: '2020-09-02T22:15:04.444Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T22:16:31.182Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T22:16:31.512Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at handler (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\topologies\replset.js:1204:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { username: 1 },
    keyValue: { username: 'test' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }',
  timestamp: '2020-09-02T22:16:32.847Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T22:16:51.471Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T22:16:51.653Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at handler (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\topologies\replset.js:1204:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { username: 1 },
    keyValue: { username: 'test' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }',
  timestamp: '2020-09-02T22:16:54.393Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at handler (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\topologies\replset.js:1204:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { username: 1 },
    keyValue: { username: 'test' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }',
  timestamp: '2020-09-02T22:18:30.491Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T22:19:57.144Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T22:19:57.423Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T22:20:54.695Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T22:20:54.885Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T22:21:18.126Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T22:21:18.372Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at handler (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\topologies\replset.js:1204:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { username: 1 },
    keyValue: { username: 'test' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }',
  timestamp: '2020-09-02T22:21:19.916Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T22:21:51.388Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T22:21:51.613Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at handler (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\topologies\replset.js:1204:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { username: 1 },
    keyValue: { username: 'test' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt.users index: username_1 dup key: { username: "test" }',
  timestamp: '2020-09-02T22:23:03.609Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-02T22:23:47.390Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority...',
  level: 'info',
  timestamp: '2020-09-02T22:23:47.734Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-03T08:07:08.380Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-03T08:07:49.014Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-03T08:08:47.680Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests...',
  level: 'info',
  timestamp: '2020-09-03T08:08:47.716Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-03T08:09:08.716Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-03T08:09:08.746Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-03T08:40:18.932Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-03T08:40:18.962Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-03T09:08:45.878Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-03T09:08:45.918Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-03T09:09:00.738Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-03T09:09:01.075Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-03T20:40:22.060Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-03T20:40:22.416Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-03T20:41:05.586Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-03T20:41:05.787Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-03T20:41:30.466Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-03T20:41:30.708Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-03T20:42:13.754Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-03T20:42:13.927Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-03T20:42:50.031Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-03T20:42:50.336Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-03T21:05:08.452Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-03T21:05:08.760Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-03T21:09:24.880Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-03T21:09:25.202Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-03T21:10:13.486Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-03T21:10:13.657Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-03T21:11:35.285Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-03T21:11:35.589Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-03T21:12:18.969Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-03T21:12:19.204Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T08:20:10.693Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T08:20:11.039Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T08:21:42.173Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T08:21:42.468Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T08:23:20.961Z'
}
{
  metadata: JsonWebTokenError {
    name: 'JsonWebTokenError',
    message: 'jwt malformed'
  },
  level: 'error',
  message: 'jwt malformed',
  timestamp: '2020-09-04T08:23:21.022Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T08:23:21.330Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T08:23:34.384Z'
}
{
  metadata: JsonWebTokenError {
    name: 'JsonWebTokenError',
    message: 'jwt malformed'
  },
  level: 'error',
  message: 'jwt malformed',
  timestamp: '2020-09-04T08:23:34.436Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T08:23:34.619Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T08:24:58.766Z'
}
{
  metadata: JsonWebTokenError {
    name: 'JsonWebTokenError',
    message: 'jwt malformed'
  },
  level: 'error',
  message: 'jwt malformed',
  timestamp: '2020-09-04T08:24:58.818Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T08:24:59.044Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T08:25:30.023Z'
}
{
  metadata: JsonWebTokenError {
    name: 'JsonWebTokenError',
    message: 'jwt malformed'
  },
  level: 'error',
  message: 'jwt malformed',
  timestamp: '2020-09-04T08:25:30.088Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T08:25:30.233Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T08:27:46.019Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T08:27:46.355Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T08:28:56.465Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T08:28:56.785Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T08:29:10.337Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T08:29:10.508Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T08:36:29.303Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T08:36:29.590Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T08:37:57.967Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T08:37:58.325Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T08:42:58.196Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T08:42:58.513Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T08:43:05.207Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T08:43:05.378Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T08:43:18.363Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T08:43:18.529Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T08:44:04.246Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T08:44:04.547Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T08:49:36.260Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T08:49:36.553Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T08:52:05.777Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T08:52:06.072Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T09:35:08.274Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T09:35:08.624Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T09:43:23.766Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T09:43:24.032Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T11:33:42.399Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T11:33:42.708Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T15:54:53.472Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T15:54:53.788Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T16:03:18.995Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T16:03:19.347Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T16:21:51.368Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T16:21:51.691Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T16:28:30.133Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T16:28:30.535Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T16:32:02.697Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T16:32:03.033Z'
}
{
  metadata: AppError: error
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\testUserController.js:64:55
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    status: 'error'
  },
  level: 'error',
  message: 'error',
  timestamp: '2020-09-04T16:32:18.470Z'
}
{
  metadata: AppError: logorpass
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:93:17
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    status: 'logorpass'
  },
  level: 'error',
  message: 'logorpass',
  timestamp: '2020-09-04T16:32:32.032Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T16:50:58.323Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T16:50:58.645Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T17:03:33.100Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T17:03:33.444Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T17:26:25.928Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T17:26:26.259Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T17:27:37.417Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T17:27:37.709Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T17:30:39.720Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T17:30:40.039Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T17:31:11.846Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T17:31:12.041Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T17:44:42.353Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T17:44:42.675Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T17:49:18.853Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T17:49:19.137Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T17:52:56.597Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T17:52:56.885Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T17:53:57.637Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T17:53:57.973Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T17:54:31.354Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-04T17:54:31.389Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T17:55:10.802Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-04T17:55:10.873Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T17:55:26.914Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-04T17:55:26.984Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T17:58:20.177Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-04T17:58:20.217Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T17:59:15.633Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-04T17:59:15.715Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T17:59:26.924Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-04T17:59:26.983Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T17:59:38.842Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-04T17:59:38.871Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T18:01:25.292Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-04T18:01:25.329Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T22:04:02.841Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-04T22:04:02.871Z'
}
{
  metadata: AppError: error
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\testUserController.js:64:55
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    status: 'error'
  },
  level: 'error',
  message: 'error',
  timestamp: '2020-09-04T22:04:15.794Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-04T22:04:44.519Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-04T22:04:44.902Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T08:37:57.434Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T08:37:57.469Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T08:51:17.140Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T08:51:17.202Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T08:51:36.684Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T08:51:36.719Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T08:52:43.207Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T08:52:43.243Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T08:54:33.498Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T08:54:33.532Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:13:34.414Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:13:34.459Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:14:01.045Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:14:01.082Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:14:14.260Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:14:14.324Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:14:47.481Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:14:47.544Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:16:30.721Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:16:30.763Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:17:09.365Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:17:09.412Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:20:06.221Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:20:06.270Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:22:30.378Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:22:30.476Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:22:48.536Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-05T09:22:48.845Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:27:23.764Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:27:23.802Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:29:40.533Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:29:40.598Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:30:34.796Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:30:34.849Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:34:09.549Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:34:09.587Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:34:59.849Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:34:59.916Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:35:07.162Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:35:07.197Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:35:43.076Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:35:43.120Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:36:17.118Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:36:17.160Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:37:13.214Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:37:13.325Z'
}
{
  metadata: TypeError: User.FindOne is not a function
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:110:30)
      at processTicksAndRejections (internal/process/task_queues.js:93:5),
  level: 'error',
  message: 'User.FindOne is not a function',
  timestamp: '2020-09-05T09:37:13.581Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:37:25.802Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:37:25.845Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:38:33.745Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:38:33.789Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:39:49.134Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:39:49.199Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:40:33.089Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:40:33.147Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:41:09.486Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:41:09.555Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:44:28.744Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:44:28.806Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:48:42.330Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:48:42.377Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:48:59.438Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:48:59.496Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:51:19.160Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:51:19.196Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:52:53.128Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:52:53.162Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:53:42.421Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:53:42.457Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:54:08.097Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:54:08.132Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:54:48.219Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:54:48.262Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:56:00.924Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:56:00.989Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T09:56:08.784Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T09:56:08.814Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T10:00:16.620Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T10:00:16.677Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T10:04:19.961Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T10:04:20.050Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T10:06:46.468Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T10:06:46.514Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T10:17:06.088Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T10:17:06.121Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T10:17:23.596Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T10:17:23.673Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T10:18:09.370Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T10:18:09.466Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T10:18:30.163Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T10:18:30.245Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T10:18:46.360Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T10:18:46.460Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T10:19:01.536Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T10:19:01.569Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T10:19:38.440Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T10:19:38.479Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T10:20:00.364Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T10:20:00.414Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T10:20:36.605Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T10:20:36.645Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T10:20:53.450Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T10:20:53.553Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T10:21:15.869Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T10:21:15.910Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T10:22:00.000Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T10:22:00.034Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T10:22:06.088Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T10:22:06.180Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T10:26:50.637Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T10:26:50.675Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T10:27:15.332Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T10:27:15.388Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T10:27:36.033Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T10:27:36.069Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T16:05:15.182Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T16:05:15.227Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T16:55:31.659Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T16:55:31.713Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T16:56:57.100Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T16:56:57.164Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:02:16.338Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:02:16.373Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:02:37.860Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:02:37.889Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:04:51.716Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:04:51.754Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:05:39.646Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:05:39.681Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:06:32.159Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:06:32.191Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:06:57.246Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:06:57.325Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:07:41.272Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:07:41.308Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:08:13.081Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:08:13.113Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:15:20.421Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:15:20.458Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:15:44.165Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:15:44.223Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:15:52.936Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:15:52.966Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:16:18.943Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:16:18.999Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:16:30.192Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:16:30.222Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:16:40.390Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:16:40.420Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:16:46.421Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:16:46.453Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:17:33.848Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:17:46.253Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:17:46.308Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:27:29.075Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:27:29.121Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:31:34.540Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:31:34.601Z'
}
{
  metadata: ReferenceError: res is not defined
      at validateEmail (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Models\userModel.js:140:7)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:106:3),
  level: 'error',
  message: 'res is not defined',
  timestamp: '2020-09-05T17:31:34.793Z'
}
{
  metadata: ReferenceError: res is not defined
      at validateUsername (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Models\userModel.js:153:7)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:107:3),
  level: 'error',
  message: 'res is not defined',
  timestamp: '2020-09-05T17:31:34.818Z'
}
{
  metadata: ReferenceError: res is not defined
      at validateEmail (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Models\userModel.js:140:7)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:106:3),
  level: 'error',
  message: 'res is not defined',
  timestamp: '2020-09-05T17:31:34.827Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:35:01.406Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:35:01.454Z'
}
{
  metadata: ReferenceError: res is not defined
      at validateEmail (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Models\userModel.js:140:7)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:106:3),
  level: 'error',
  message: 'res is not defined',
  timestamp: '2020-09-05T17:35:01.690Z'
}
{
  metadata: ReferenceError: res is not defined
      at validateUsername (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Models\userModel.js:153:7)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:107:3),
  level: 'error',
  message: 'res is not defined',
  timestamp: '2020-09-05T17:35:01.750Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:37:19.539Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:37:19.574Z'
}
{
  metadata: ReferenceError: res is not defined
      at validateEmail (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Models\userModel.js:140:7)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:106:3),
  level: 'error',
  message: 'res is not defined',
  timestamp: '2020-09-05T17:37:19.797Z'
}
{
  metadata: ReferenceError: res is not defined
      at validateUsername (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Models\userModel.js:153:7)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:107:3),
  level: 'error',
  message: 'res is not defined',
  timestamp: '2020-09-05T17:37:19.822Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:37:49.967Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:37:50.007Z'
}
{
  metadata: ReferenceError: res is not defined
      at validateEmail (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Models\userModel.js:140:7)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:106:3),
  level: 'error',
  message: 'res is not defined',
  timestamp: '2020-09-05T17:37:50.304Z'
}
{
  metadata: ReferenceError: res is not defined
      at validateUsername (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Models\userModel.js:153:7)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:107:3),
  level: 'error',
  message: 'res is not defined',
  timestamp: '2020-09-05T17:37:50.329Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:37:57.009Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:37:57.039Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.append (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:732:15)
      at ServerResponse.cookie (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:857:8)
      at createSendToken (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:28:7)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:114:10)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T17:37:57.557Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.append (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:732:15)
      at ServerResponse.cookie (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:857:8)
      at createSendToken (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:28:7)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:114:10)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T17:37:57.563Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:38:39.625Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:38:39.723Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:38:52.058Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:38:52.114Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.append (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:732:15)
      at ServerResponse.res.cookie (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:857:8)
      at createSendToken (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:39:7)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:141:10)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T17:38:52.607Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.append (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:732:15)
      at ServerResponse.res.cookie (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:857:8)
      at createSendToken (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:39:7)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:141:10)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T17:38:52.612Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:41:11.410Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:41:11.446Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.append (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:732:15)
      at ServerResponse.res.cookie (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:857:8)
      at createSendToken (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:39:7)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:141:10)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T17:41:11.945Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.append (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:732:15)
      at ServerResponse.res.cookie (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:857:8)
      at createSendToken (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:39:7)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:141:10)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T17:41:11.951Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:42:04.062Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:42:04.096Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:45:28.695Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:45:28.766Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.append (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:732:15)
      at ServerResponse.res.cookie (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:857:8)
      at createSendToken (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:37:7)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:139:10)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T17:45:29.252Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.append (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:732:15)
      at ServerResponse.res.cookie (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:857:8)
      at createSendToken (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:37:7)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:139:10)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T17:45:29.258Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:46:11.410Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:46:11.446Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.append (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:732:15)
      at ServerResponse.res.cookie (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:857:8)
      at createSendToken (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:37:7)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:139:10)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T17:46:11.962Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.append (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:732:15)
      at ServerResponse.res.cookie (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:857:8)
      at createSendToken (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:37:7)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:139:10)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T17:46:11.967Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:53:39.001Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:53:39.038Z'
}
{
  metadata: ReferenceError: res is not defined
      at validateEmail (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:307:7)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:106:16),
  level: 'error',
  message: 'res is not defined',
  timestamp: '2020-09-05T17:53:39.251Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.append (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:732:15)
      at ServerResponse.res.cookie (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:857:8)
      at createSendToken (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:37:7)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:143:10)
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T17:53:39.588Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:54:09.849Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:54:09.887Z'
}
{
  metadata: ReferenceError: res is not defined
      at validateEmail (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:307:7)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:106:16),
  level: 'error',
  message: 'res is not defined',
  timestamp: '2020-09-05T17:54:10.109Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.append (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:732:15)
      at ServerResponse.res.cookie (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:857:8)
      at createSendToken (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:37:7)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:143:10)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T17:54:10.443Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:56:18.793Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:56:18.833Z'
}
{
  metadata: ReferenceError: res is not defined
      at validateEmail (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:309:7)
      at processTicksAndRejections (internal/process/task_queues.js:93:5)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:106:16),
  level: 'error',
  message: 'res is not defined',
  timestamp: '2020-09-05T17:56:19.030Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.send (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:170:12)
      at ServerResponse.json (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:267:15)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:136:32)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T17:56:19.059Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:57:20.585Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:57:20.682Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.append (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:732:15)
      at ServerResponse.res.cookie (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:857:8)
      at createSendToken (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:37:7)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:147:10)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T17:57:21.179Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.append (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:732:15)
      at ServerResponse.res.cookie (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:857:8)
      at createSendToken (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:37:7)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:147:10)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T17:57:21.182Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:57:39.502Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:57:39.557Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.append (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:732:15)
      at ServerResponse.res.cookie (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:857:8)
      at createSendToken (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:37:7)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:147:10)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T17:57:40.047Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.append (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:732:15)
      at ServerResponse.res.cookie (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:857:8)
      at createSendToken (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:37:7)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:147:10)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T17:57:40.053Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:58:47.118Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:58:47.180Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:59:24.095Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:59:24.152Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.send (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:170:12)
      at ServerResponse.json (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:267:15)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:113:32)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T17:59:24.389Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.append (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:732:15)
      at ServerResponse.cookie (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:857:8)
      at createSendToken (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:28:7)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:121:10)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T17:59:24.642Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T17:59:42.086Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T17:59:42.123Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt_tests.users index: email_1 dup key: { email: "test123@gmail.com" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { email: 1 },
    keyValue: { email: 'test123@gmail.com' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt_tests.users index: email_1 dup key: { email: "test123@gmail.com" }',
  timestamp: '2020-09-05T17:59:42.618Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt_tests.users index: username_1 dup key: { username: "testing" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { username: 1 },
    keyValue: { username: 'testing' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt_tests.users index: username_1 dup key: { username: "testing" }',
  timestamp: '2020-09-05T17:59:42.625Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T18:00:20.534Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T18:00:20.568Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.append (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:732:15)
      at ServerResponse.res.cookie (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:857:8)
      at createSendToken (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:37:7)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:147:10)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T18:00:21.065Z'
}
{
  metadata: Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (_http_outgoing.js:485:11)
      at ServerResponse.header (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:771:10)
      at ServerResponse.append (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:732:15)
      at ServerResponse.res.cookie (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\response.js:857:8)
      at createSendToken (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:37:7)
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:147:10)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  },
  level: 'error',
  message: 'Cannot set headers after they are sent to the client',
  timestamp: '2020-09-05T18:00:21.070Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T18:00:44.826Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T18:00:44.894Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt_tests.users index: email_1 dup key: { email: "test123@gmail.com" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { email: 1 },
    keyValue: { email: 'test123@gmail.com' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt_tests.users index: email_1 dup key: { email: "test123@gmail.com" }',
  timestamp: '2020-09-05T18:00:45.413Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt_tests.users index: username_1 dup key: { username: "testing" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { username: 1 },
    keyValue: { username: 'testing' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt_tests.users index: username_1 dup key: { username: "testing" }',
  timestamp: '2020-09-05T18:00:45.423Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T18:01:36.622Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T18:01:36.686Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T18:01:48.159Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T18:01:48.214Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T18:02:47.726Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T18:02:47.805Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T18:02:55.697Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T18:02:55.731Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T18:03:03.634Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T18:03:03.661Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T21:58:49.045Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T21:58:49.099Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:17:40.094Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:17:40.132Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:17:46.817Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:17:46.848Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:19:47.928Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:19:47.961Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:23:37.085Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:23:37.176Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:23:51.776Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:23:51.823Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:25:02.383Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:25:02.445Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:26:13.737Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:26:13.791Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:27:10.510Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:27:10.590Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:27:34.005Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:27:34.034Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:28:07.864Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:28:07.899Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:28:47.442Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:28:47.474Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:31:59.447Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:31:59.533Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:32:19.892Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:32:19.949Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:33:15.413Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:33:15.446Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:33:49.463Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:33:49.529Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:39:10.932Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:39:10.970Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:39:33.246Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:39:33.302Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:39:42.840Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:39:42.868Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:40:08.120Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:40:08.170Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt_tests.users index: email_1 dup key: { email: "test123@gmail.com" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { email: 1 },
    keyValue: { email: 'test123@gmail.com' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt_tests.users index: email_1 dup key: { email: "test123@gmail.com" }',
  timestamp: '2020-09-05T22:40:08.655Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt_tests.users index: username_1 dup key: { username: "testing" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { username: 1 },
    keyValue: { username: 'testing' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt_tests.users index: username_1 dup key: { username: "testing" }',
  timestamp: '2020-09-05T22:40:08.930Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:40:28.030Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:40:28.083Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt_tests.users index: email_1 dup key: { email: "test123@gmail.com" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { email: 1 },
    keyValue: { email: 'test123@gmail.com' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt_tests.users index: email_1 dup key: { email: "test123@gmail.com" }',
  timestamp: '2020-09-05T22:40:28.563Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt_tests.users index: username_1 dup key: { username: "testing" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { username: 1 },
    keyValue: { username: 'testing' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt_tests.users index: username_1 dup key: { username: "testing" }',
  timestamp: '2020-09-05T22:40:28.841Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:41:07.093Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:41:07.158Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt_tests.users index: email_1 dup key: { email: "test123@gmail.com" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { email: 1 },
    keyValue: { email: 'test123@gmail.com' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt_tests.users index: email_1 dup key: { email: "test123@gmail.com" }',
  timestamp: '2020-09-05T22:41:07.635Z'
}
{
  metadata: MongoError: E11000 duplicate key error collection: vt_tests.users index: username_1 dup key: { username: "testing" }
      at Function.create (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\error.js:57:12)
      at toError (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\utils.js:123:22)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\operations\common_functions.js:265:39
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\mongodb\lib\core\connection\pool.js:405:18
      at processTicksAndRejections (internal/process/task_queues.js:75:11) {
    driver: true,
    name: 'MongoError',
    index: 0,
    code: 11000,
    keyPattern: { username: 1 },
    keyValue: { username: 'testing' }
  },
  level: 'error',
  message: 'E11000 duplicate key error collection: vt_tests.users index: username_1 dup key: { username: "testing" }',
  timestamp: '2020-09-05T22:41:07.910Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:42:07.773Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:42:07.807Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:43:18.777Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:43:18.807Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:43:22.733Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:43:22.777Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:43:25.119Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:43:25.149Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:44:16.459Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:44:16.521Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:46:02.601Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:46:02.664Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:46:39.933Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:46:39.992Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:47:50.620Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:47:50.684Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:48:05.730Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:48:05.767Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:50:00.225Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:50:00.286Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:50:24.128Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:50:24.162Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:50:38.498Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:50:38.551Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-05T22:51:05.670Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-05T22:51:05.736Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:23:35.254Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:23:35.289Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:24:51.361Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:24:51.416Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:28:20.439Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:28:20.500Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:28:35.953Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:28:36.009Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:29:03.981Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:29:04.052Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:29:09.020Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:29:09.053Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:29:56.547Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:29:56.592Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:30:31.255Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:30:31.288Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:31:14.347Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:31:14.384Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:31:32.123Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:31:32.197Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:32:08.726Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:32:08.767Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:32:16.114Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:32:16.149Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:32:25.904Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:32:25.933Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:32:35.904Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:32:35.930Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:33:19.943Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:33:19.976Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:33:41.316Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:33:41.348Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:33:52.765Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:33:52.865Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:34:26.517Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:34:26.551Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:46:03.925Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:46:03.977Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:47:06.662Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:47:06.694Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:47:33.076Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:47:33.110Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:47:37.190Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:47:37.218Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:47:50.775Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:47:50.810Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:48:26.651Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:48:26.690Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:48:51.014Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:48:51.043Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:49:06.528Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:49:06.569Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:49:37.491Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:49:37.540Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:51:18.297Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:51:18.334Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:51:30.610Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:51:30.647Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:51:41.939Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:51:41.993Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:54:17.194Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:54:17.255Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:55:30.114Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:55:30.153Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:55:46.780Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:55:46.812Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:56:01.749Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:56:01.802Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T08:58:48.791Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T08:58:48.843Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:00:07.108Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:00:07.170Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:00:29.640Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:00:29.681Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:02:12.893Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:02:12.930Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:02:59.320Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:02:59.354Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:03:31.734Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:03:31.821Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:03:52.505Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:03:52.554Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:04:13.851Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:04:13.949Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:04:37.189Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:04:37.273Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:04:46.120Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:04:46.151Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:05:02.289Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:05:02.346Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:07:48.749Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:07:48.814Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:13:54.297Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:13:54.331Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:15:14.300Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:15:14.336Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:15:35.463Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:15:35.515Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:15:56.286Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:15:56.324Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:16:01.010Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:16:01.042Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:16:16.027Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:16:16.085Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:17:24.535Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:17:24.597Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:21:34.449Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:21:34.517Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:21:52.036Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:21:52.109Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:22:34.119Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:22:34.167Z'
}
{
  metadata: ReferenceError: uesr is not defined
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:107:3)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-rate-limit\lib\express-rate-limit.js:144:11
      at processTicksAndRejections (internal/process/task_queues.js:93:5),
  level: 'error',
  message: 'uesr is not defined',
  timestamp: '2020-09-06T09:22:34.397Z'
}
{
  metadata: ReferenceError: uesr is not defined
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:107:3)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-rate-limit\lib\express-rate-limit.js:144:11
      at processTicksAndRejections (internal/process/task_queues.js:93:5),
  level: 'error',
  message: 'uesr is not defined',
  timestamp: '2020-09-06T09:22:34.424Z'
}
{
  metadata: ReferenceError: uesr is not defined
      at exports.signup (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:107:3)
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-rate-limit\lib\express-rate-limit.js:144:11
      at processTicksAndRejections (internal/process/task_queues.js:93:5),
  level: 'error',
  message: 'uesr is not defined',
  timestamp: '2020-09-06T09:22:34.436Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:22:50.829Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:22:50.909Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:23:09.780Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:23:09.853Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:24:10.677Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:24:10.713Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:31:09.079Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:31:09.132Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:33:10.562Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:33:10.626Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:34:18.453Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:34:18.487Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:35:01.255Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:35:01.295Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:35:09.227Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:35:09.301Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:35:39.693Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:35:39.751Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:35:56.335Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:35:56.411Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:36:10.498Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:36:10.525Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:37:41.838Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:37:41.882Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:38:23.008Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:38:23.041Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:38:30.388Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:38:30.435Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:39:30.323Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:39:30.358Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:39:43.028Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:39:43.062Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:40:23.367Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:40:23.410Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:40:56.648Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:40:56.706Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:41:47.935Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:41:48.000Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:42:23.839Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:42:23.876Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:43:43.032Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:43:43.070Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:44:08.137Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:44:08.175Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:46:21.270Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:46:21.312Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:46:46.032Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:46:46.110Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:46:53.609Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:46:53.647Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:50:45.934Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:50:45.973Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:51:28.526Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:51:28.570Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:51:53.996Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:51:54.056Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:53:07.713Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:53:07.775Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:54:41.793Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:54:41.828Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:56:53.995Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:56:54.042Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:57:39.711Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:57:39.751Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:57:51.873Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:57:51.930Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:58:08.537Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:58:08.601Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:58:23.179Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:58:23.207Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:59:07.518Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:59:07.551Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T09:59:27.537Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T09:59:27.567Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T10:04:10.904Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T10:04:10.974Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T10:04:30.644Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T10:04:30.700Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T10:04:52.146Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T10:04:52.177Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T10:05:13.658Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T10:05:13.689Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T10:06:07.703Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T10:06:07.738Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T10:43:04.767Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T10:43:04.807Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T10:43:33.383Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T10:43:33.448Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T10:50:20.447Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T10:50:20.526Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T12:34:30.823Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T12:34:30.855Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T12:34:31.902Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T12:35:14.963Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T12:35:15.711Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T12:35:15.761Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:02:28.594Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T13:02:29.509Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:02:29.546Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:03:04.808Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T13:03:05.694Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:03:05.739Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:05:26.774Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T13:05:27.577Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:05:27.613Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:07:34.644Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T13:07:35.426Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:07:35.467Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:11:55.586Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T13:11:56.428Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:11:56.465Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:13:17.342Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T13:13:18.362Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:13:18.402Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:13:42.299Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T13:13:43.439Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:13:43.493Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:14:40.650Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T13:14:41.636Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:14:41.688Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:15:05.003Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T13:15:06.170Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:15:06.240Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:16:04.158Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T13:16:05.089Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:16:05.131Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:16:39.430Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:20:23.779Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T13:20:24.551Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:20:24.588Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:20:56.706Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T13:20:57.505Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:20:57.542Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:21:23.648Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T13:21:24.443Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:21:24.473Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:21:30.978Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:21:47.078Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:21:49.430Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:23:47.774Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:24:29.227Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:25:25.676Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:25:56.784Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:26:12.378Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:26:33.959Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:26:36.469Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:26:42.388Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:27:41.021Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:29:11.667Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:29:32.091Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:29:34.460Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:31:18.510Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:32:55.159Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:33:38.737Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:34:08.586Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:34:22.419Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:34:39.957Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:35:26.312Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:35:38.199Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:36:06.407Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:36:48.037Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:37:43.962Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:38:26.094Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:40:13.017Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:40:35.040Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:40:50.618Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:41:32.847Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:41:55.132Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:42:39.527Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:42:54.824Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:43:12.794Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:44:10.189Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:45:18.202Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:45:26.428Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:46:05.818Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:46:10.722Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:46:35.290Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:46:42.257Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T13:46:43.117Z'
}
{
  message: 'Connected to mongodb://localhost/vt_tests.',
  level: 'info',
  timestamp: '2020-09-06T13:46:43.246Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T13:48:11.828Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T13:50:59.278Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-06T13:50:59.745Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T13:51:03.343Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-06T13:51:03.521Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-06T14:23:01.097Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-06T14:23:35.356Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-06T14:23:39.507Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T14:23:40.405Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-06T14:23:40.573Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-06T14:24:10.748Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T14:29:26.852Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-06T14:29:27.129Z'
}
{
  metadata: AppError: logorpass
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:95:17
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    status: 'logorpass'
  },
  level: 'error',
  message: 'logorpass',
  timestamp: '2020-09-06T14:29:55.826Z'
}
{
  metadata: AppError: logorpass
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:95:17
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    status: 'logorpass'
  },
  level: 'error',
  message: 'logorpass',
  timestamp: '2020-09-06T14:30:01.482Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T14:30:26.099Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-06T14:30:26.278Z'
}
{
  metadata: AppError: logorpass
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:95:17
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    status: 'logorpass'
  },
  level: 'error',
  message: 'logorpass',
  timestamp: '2020-09-06T14:30:48.988Z'
}
{
  metadata: AppError: logorpass
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\authController.js:95:17
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    status: 'logorpass'
  },
  level: 'error',
  message: 'logorpass',
  timestamp: '2020-09-06T14:30:50.498Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T14:33:53.735Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T14:37:28.965Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T14:38:03.602Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-06T14:38:03.970Z'
}
{
  metadata: AppError: notAllowed
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\testUserController.js:93:42
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\testUserController.js:77:5
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    status: 'notAllowed'
  },
  level: 'error',
  message: 'notAllowed',
  timestamp: '2020-09-06T14:38:50.880Z'
}
{
  metadata: AppError: notAllowed
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\testUserController.js:93:42
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\testUserController.js:77:5
      at runMicrotasks (<anonymous>)
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    status: 'notAllowed'
  },
  level: 'error',
  message: 'notAllowed',
  timestamp: '2020-09-06T14:46:47.621Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T14:47:45.090Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T14:54:49.196Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-06T14:54:49.600Z'
}
{
  metadata: AppError: notAllowed
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\testUserController.js:94:42
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\testUserController.js:77:5
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    status: 'notAllowed'
  },
  level: 'error',
  message: 'notAllowed',
  timestamp: '2020-09-06T14:54:52.556Z'
}
{
  metadata: AppError: notAllowed
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\testUserController.js:94:42
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\testUserController.js:77:5
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    status: 'notAllowed'
  },
  level: 'error',
  message: 'notAllowed',
  timestamp: '2020-09-06T14:57:03.649Z'
}
{
  metadata: AppError: notAllowed
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\testUserController.js:94:42
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\testUserController.js:77:5
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    status: 'notAllowed'
  },
  level: 'error',
  message: 'notAllowed',
  timestamp: '2020-09-06T14:57:22.919Z'
}
{
  metadata: AppError: notAllowed
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\testUserController.js:94:42
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\testUserController.js:77:5
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    status: 'notAllowed'
  },
  level: 'error',
  message: 'notAllowed',
  timestamp: '2020-09-06T14:57:52.700Z'
}
{
  metadata: AppError: notAllowed
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\testUserController.js:94:42
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\testUserController.js:77:5
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    status: 'notAllowed'
  },
  level: 'error',
  message: 'notAllowed',
  timestamp: '2020-09-06T14:59:03.262Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T15:02:31.230Z'
}
{
  message: 'Connected to mongodb+srv://vidly_user:a5rsfLrftgivX9AC@cluster0.p07ru.mongodb.net/vt?retryWrites=true&w=majority.',
  level: 'info',
  timestamp: '2020-09-06T15:02:31.517Z'
}
{
  metadata: AppError: notAllowed
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\testUserController.js:88:42
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\misc\catchAsync.js:2:5
      at newFn (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express-async-errors\index.js:16:20)
      at Layer.handle [as handle_request] (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\layer.js:95:5)
      at next (C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\node_modules\express\lib\router\route.js:137:13)
      at C:\Users\Ryu\Desktop\Workspace\Projects\Current\VT\Website\Backend\VT-Backend-develop\Controllers\testUserController.js:71:5
      at processTicksAndRejections (internal/process/task_queues.js:93:5) {
    status: 'notAllowed'
  },
  level: 'error',
  message: 'notAllowed',
  timestamp: '2020-09-06T15:02:35.873Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-06T22:44:36.009Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-07T09:57:39.189Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-07T10:35:06.571Z'
}
{
  message: 'Listening on port 3000...',
  level: 'info',
  timestamp: '2020-09-07T14:40:32.150Z'
}
